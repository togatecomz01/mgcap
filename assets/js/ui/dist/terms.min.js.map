{"version":3,"sources":["terms.js"],"names":["$","document","ready","$chkAll","$reqChks","$optChks","$consChk","$consChks","$allChks","this","bindEvents","self","on","toggleAll","prop","uptAllChk","isChecked","uptConsAllChk","allConsChked","length","filter","allSelChked","allChecked","anyConsChked","init","removePopupAttrOnPC","window","innerWidth","resizeTimer","removeAttr","mutations","forEach","clearTimeout","setTimeout","addedNodes","find","MutationObserver","m","childList","$added","observe","body","subtree"],"mappings":"aAAAA,EAAEC,UAAUC,MAAM,WAKd,IAEQC,EAASC,EAAUC,EAAUC,EAAUC,EAAWC,GAGlD,CAEIL,KAAUH,WAAVG,EAAUH,EAAE,WACJI,EAAKJ,EAAA,WACbK,EAAWL,EAAE,WAALM,EAAKN,EAAA,YAEbO,EAAYP,EAAE,iBADNQ,EAAKR,EAAA,6CAKbS,KAAKC,cAALA,WAAA,WAGJ,IAAAC,EAAAF,KAMIN,EAAQS,GAAG,SAAU,WAAVD,EAAAE,UAAUb,EAAAS,MAAYK,KAAA,cAKzBN,EAAII,GAAZ,SAAsB,WAEbG,EAALA,cAKIC,EAASJ,GAAK,SAAF,WACNE,IAAVE,EAA0BA,EAAAA,MAAAA,KAA1B,WACKD,EAALD,KAAA,UAAAE,GAGJL,EAAAI,cAGSA,EAALH,GAAA,SAAA,WAFJD,EAAAM,gBAtCDN,EAAAI,eA+CCF,UAAA,SAAAG,GA/CDR,EAAAM,KAAA,UAAAE,GAmDMP,KAAEM,aAAXA,UAAW,WAGHG,IAAAA,EAAeX,EAAAY,SAAqBZ,EAAUa,OAAO,YAAYD,OADjEE,EAAchB,EAASc,SAAWd,EAASe,OAAO,YAAYD,OAE9DG,EAAsBH,EAAWX,SAASY,EAAOA,OAAYD,YAAQA,OAExEX,EAAAW,OAAAX,EAAAY,OAAA,YAAAD,OAEWL,GAAgBO,GAAxBH,EACGf,EAAAW,KAAA,WAAA,GAENX,EAAAW,KAAA,WAAA,IAMDR,cAAc,WAGlB,IAAAiB,EAAA,EAAAhB,EAAAa,OAAA,YAAAD,OACAb,EAAAQ,KAAA,UAAAS,MAcSC,SAMhBxB,EAAA,WAGDyB,SAAAA,IATiB,IAGXC,OAAOC,YASTC,EAAAA,0BAAJC,WAAA,mBAHAJ,IAGA,IAAIG,EAAc,KAShBE,EAAAA,QAAUC,GAAAA,SAAQ,WAChBC,aAAAJ,GACAA,EAAcK,WAAGC,EAAjB,OAKOC,IAAPC,iBAA2B,SAAAN,GAP7BJ,OAAAC,YArBe,KAmBjBG,EAAAC,QAAA,SAAAM,GAa4BC,IAAAA,EAAFtC,EAAAqC,EAAAH,YAA4BK,EAAApB,SALlDoB,EAAOnB,OAAO,2BAA2BS,WAAW,mBACpDU,EAAOJ,MAAQI,EAAOJ,KAAK,2BAA2BN,WAAW,wBAIlEW,QAAQvC,SAASwC,KAAM,CAAEH,WAAW,EAAMI,SAAS","file":"terms.min.js","sourcesContent":["$(document).ready(function(){\n\n    /**\n     * �빟愿� �룞�쓽\n     */\n    var TermsAgreement = (function () {\n\n        var $chkAll, $reqChks, $optChks, $consChk, $consChks, $allChks, $submitBtn;\n\n        return {\n            // 珥덇린�솕\n            init: function () {\n                $chkAll = $('#chkAll'); // �쟾泥� �룞�쓽 (遺�紐�)\n                $reqChks = $('.chkReq'); // �븘�닔 �빆紐�\n                $optChks = $('.chkOpt'); // �꽑�깮 �빆紐�\n                $consChk = $('#chkCons'); // �닔�떊 �룞�쓽 (遺�紐�)\n                $consChks = $('.chkConsChild'); // �닔�떊 �룞�쓽 �빆紐� (SMS, �씠硫붿씪, 愿묎퀬�꽦)\n                $allChks = $('.chkReq, .chkOpt, #chkCons, .chkConsChild'); // �쟾泥� �빆紐�\n                // $submitBtn = $('#submitBtn'); // 媛��엯 踰꾪듉\n\n                this.bindEvents();\n            },\n\n            // �씠踰ㅽ듃\n            bindEvents: function () {\n\n                var self = this;\n\n                // �쟾泥� �룞�쓽 (遺�紐�)\n                $chkAll.on('change', function () {\n                    self.toggleAll($(this).prop('checked'));\n                });\n\n                // �쟾泥� �빆紐�\n                $allChks.on('change', function () {\n                    // self.uptSubmitBtn();\n                    self.uptAllChk();\n                });\n\n                // �닔�떊 �룞�쓽 (遺�紐�)\n                $consChk.on('change', function () {\n                    var isChecked = $(this).prop('checked');\n                    $consChks.prop('checked', isChecked);\n                    self.uptAllChk();\n                });\n\n                // �닔�떊 �룞�쓽 �빆紐�\n                $consChks.on('change', function () {\n                    self.uptConsAllChk()\n                    self.uptAllChk();\n                });\n            },\n\n            toggleAll: function (isChecked) {\n                $allChks.prop('checked', isChecked);\n                // this.uptSubmitBtn();\n                this.uptAllChk();\n            },\n\n            // �쟾泥� �룞�쓽 泥댄겕 �긽�깭 �뾽�뜲�씠�듃 (泥댄겕 �뿬遺�)\n            uptAllChk: function () {\n                var allReqChked = $reqChks.length === $reqChks.filter(':checked').length; // �븘�닔 �빆紐�\n                var allSelChked = $optChks.length === $optChks.filter(':checked').length; // �꽑�깮 �빆紐�\n                var allConsChked = $consChks.length === $consChks.filter(':checked').length; // �닔�떊 �룞�쓽\n                var allChecked = $allChks.length === $allChks.filter(':checked').length; // 紐⑤뱺 �빆紐�\n\n                 //  �븘�닔 + �꽑�깮 + �닔�떊 �룞�쓽 ( 紐⑤몢 泥댄겕 �떆 �쟾泥� �룞�쓽 泥댄겕 �솢�꽦�솕 )\n                if (allReqChked && allSelChked && allConsChked) {\n                    $chkAll.prop('checked', true);\n                } else {\n                    $chkAll.prop('checked', false);\n                }\n            },\n\n            // �닔�떊 �룞�쓽 �빆紐� (�븯�쐞 �빆紐� 以� �븯�굹�씪�룄 �꽑�깮 �떆)\n            uptConsAllChk: function () {\n                var anyConsChked = $consChks.filter(':checked').length > 0;\n                $consChk.prop('checked', anyConsChked);\n            },\n\n            //踰꾪듉 �솢�꽦�솕 (�븘�닔 �빆紐�)\n            // uptSubmitBtn: function () {\n            //     var allReqChked = $reqChks.length === $reqChks.filter(':checked').length;\n            //     $submitBtn.prop('disabled', !allReqChked);\n            // }\n        };\n    })();\n\n    TermsAgreement.init();\n\n\n});\n\n\n$(function () {\n    var BREAKPOINT = 768; // PC 기준 > 768px\n  \n    function removePopupAttrOnPC() {\n      if (window.innerWidth > BREAKPOINT) {\n        $('label[data-popup-open]').removeAttr('data-popup-open');\n      }\n    }\n  \n    // 1) 최초 로드 시\n    removePopupAttrOnPC();\n  \n    // 2) 창 크기 변경 시 (디바운스)\n    var resizeTimer = null;\n    $(window).on('resize', function () {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(removePopupAttrOnPC, 150);\n    });\n  \n    // 3) 동적으로 label이 추가되는 경우 대비\n    var mo = new MutationObserver(function (mutations) {\n      if (window.innerWidth <= BREAKPOINT) return; // 모바일이면 touch 안 함\n      mutations.forEach(function (m) {\n        // 추가된 노드 중 label[data-popup-open] 찾아서 제거\n        var $added = $(m.addedNodes);\n        if (!$added.length) return;\n  \n        // 자신이 label인 경우 + 자식들 중 label 모두 처리\n        $added.filter('label[data-popup-open\"]').removeAttr('data-popup-open');\n        $added.find && $added.find('label[data-popup-open\"]').removeAttr('data-popup-open');\n      });\n    });\n  \n    mo.observe(document.body, { childList: true, subtree: true });\n  });\n  \n  "]}