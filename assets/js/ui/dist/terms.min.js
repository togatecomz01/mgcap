"use strict";$(document).ready(function(){var o,c,h,t,i,l;({init:function(){o=$("#chkAll"),c=$(".chkReq"),h=$(".chkOpt"),t=$("#chkCons"),i=$(".chkConsChild"),l=$(".chkReq, .chkOpt, #chkCons, .chkConsChild"),this.bindEvents()},bindEvents:function(){var n=this;o.on("change",function(){n.toggleAll($(this).prop("checked"))}),l.on("change",function(){n.uptAllChk()}),t.on("change",function(){var e=$(this).prop("checked");i.prop("checked",e),n.uptAllChk()}),i.on("change",function(){n.uptConsAllChk(),n.uptAllChk()})},toggleAll:function(e){l.prop("checked",e),this.uptAllChk()},uptAllChk:function(){var e=c.length===c.filter(":checked").length,n=h.length===h.filter(":checked").length,t=i.length===i.filter(":checked").length;l.length,l.filter(":checked").length,e&&n&&t?o.prop("checked",!0):o.prop("checked",!1)},uptConsAllChk:function(){var e=0<i.filter(":checked").length;t.prop("checked",e)}}).init()}),$(function(){function e(){768<window.innerWidth&&$("label[data-popup-open]").removeAttr("data-popup-open")}e();var n=null;$(window).on("resize",function(){clearTimeout(n),n=setTimeout(e,150)}),new MutationObserver(function(e){window.innerWidth<=768||e.forEach(function(e){var n=$(e.addedNodes);n.length&&(n.filter('label[data-popup-open"]').removeAttr("data-popup-open"),n.find&&n.find('label[data-popup-open"]').removeAttr("data-popup-open"))})}).observe(document.body,{childList:!0,subtree:!0})});
//# sourceMappingURL=terms.min.js.map
